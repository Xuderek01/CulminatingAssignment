import javafx.application.Application;
import javafx.scene.chart.LineChart;
import javafx.scene.chart.XYChart; 
import javafx.scene.chart.NumberAxis;
import javafx.stage.Stage;
import javafx.scene.Scene;


public class App extends Application {
  public static void main(String[] args) {
    launch(args);
  }

  public void start(Stage stage) {
    lineGraphs(stage);
  }

  public void lineGraphs(Stage stage) {

    //Declare axes and label them 
    NumberAxis xAxis = new NumberAxis();
    NumberAxis yAxis = new NumberAxis();
    xAxis.setLabel("X axis"); 
    yAxis.setLabel("Y axis"); 

    //Create line chart and set the titles
    LineChart<Number,Number> lineChart = new LineChart<Number,Number>(xAxis,yAxis);  
    stage.setTitle("LineChart");
    lineChart.setTitle("Line Chart Title"); 
    lineChart.setLegendVisible(false);  //Makes legend invisible for now
    
    //Defining and assigning data to the line chart 
    var data = new XYChart.Series<Number, Number>(); 
    data.setName("Data name");
    
    //Use loop
    data.getData().add(new XYChart.Data<>(0, 0));
    data.getData().add(new XYChart.Data<>(1, 10));
    data.getData().add(new XYChart.Data<>(2, 20));
    data.getData().add(new XYChart.Data<>(3, 30));
    data.getData().add(new XYChart.Data<>(4, 40));
    data.getData().add(new XYChart.Data<>(5, 50));
    data.getData().add(new XYChart.Data<>(6, 60));

    lineChart.getData().add(data);

    //Setting the scene and showing the stage(Window) 
    Scene scene = new Scene(lineChart,800,600); //Sets the width and height 
    stage.setScene(scene);
    stage.show();
  }

    
}
